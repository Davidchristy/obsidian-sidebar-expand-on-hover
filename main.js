/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

const DEFAULT_SETTINGS = {
    leftSideEnabled: true,
    rightSideEnabled: true,
    leftSidebarAnimation: false,
    rightSidebarAnimation: false,
    leftSidebarWidth: 252,
    rightSidebarWidth: 252,
};
class MyPlugin extends obsidian.Plugin {
    constructor() {
        super(...arguments);
        // Initializes the variables to store DOM HTML elements
        this.initialize = () => {
            [this.leftRibbon, this.rightRibbon] = Array.from(document.getElementsByClassName('workspace-ribbon'));
            [this.leftSidebar, this.rightSidebar] = Array.from(document.getElementsByClassName('mod-horizontal'));
        };
        // Adds event listeners to the HTML elements
        this.setEvents = () => {
            this.registerDomEvent(document, 'mouseout', () => {
                this.collapseSidebar();
            });
            this.registerDomEvent(this.leftRibbon, 'mouseover', () => {
                this.expandSidebar(this.leftSidebar);
            });
            this.registerDomEvent(this.rightRibbon, 'mouseover', () => {
                this.expandSidebar(this.rightSidebar);
            });
            this.registerDomEvent(this.leftSidebar, 'mouseover', () => {
                this.expandSidebar(this.leftSidebar);
            });
            this.registerDomEvent(this.rightSidebar, 'mouseover', () => {
                this.expandSidebar(this.rightSidebar);
            });
        };
        // Changes sidebar style width and display to expand it
        this.expandSidebar = (sidebar) => {
            try {
                if (sidebar == this.leftSidebar && this.settings.leftSideEnabled) {
                    sidebar.style.width = String(this.settings.leftSidebarWidth) + 'px';
                    sidebar.style.removeProperty('display');
                }
                if (sidebar == this.rightSidebar && this.settings.rightSideEnabled) {
                    sidebar.style.width = String(this.settings.rightSidebarWidth) + 'px';
                    sidebar.style.removeProperty('display');
                }
            }
            catch (e) {
                console.log('Failed to read property');
            }
        };
        // Changes sidebar style width to collapse it
        this.collapseSidebar = () => {
            if (this.settings.leftSideEnabled) {
                this.leftSidebar.style.width = '0px';
            }
            if (this.settings.rightSideEnabled) {
                this.rightSidebar.style.width = '0px';
            }
        };
        // CSS for adding transition animation
        this.addStyle = () => {
            if (this.settings.leftSidebarAnimation && this.settings.leftSideEnabled) {
                this.leftSidebar.classList.add('sidebar');
                this.leftSidebar.classList.toggle('.sidebar.active');
            }
            if (this.settings.rightSidebarAnimation && this.settings.rightSideEnabled) {
                this.rightSidebar.classList.add('sidebar');
                this.rightSidebar.classList.toggle('.sidebar.active');
            }
        };
        // Removes transition animation
        this.removeStyle = () => {
            if (!this.settings.leftSidebarAnimation && this.settings.leftSideEnabled) {
                this.leftSidebar.classList.remove('sidebar');
            }
            if (!this.settings.rightSidebarAnimation &&
                this.settings.rightSideEnabled) {
                this.rightSidebar.classList.remove('sidebar');
            }
        };
    }
    onload() {
        return __awaiter(this, void 0, void 0, function* () {
            // Initialize and set events when layout is fully ready
            this.app.workspace.onLayoutReady(() => {
                this.initialize();
                this.setEvents();
                this.addSettingTab(new MyPluginSettingTab(this.app, this));
                console.log('Values are: ' + this.settings);
                this.loadSettings().then(() => {
                    this.addStyle();
                });
            });
        });
    }
    onunload() {
        this.saveSettings();
    }
    loadSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            this.settings = Object.assign(DEFAULT_SETTINGS, yield this.loadData());
        });
    }
    saveSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.saveData(this.settings);
        });
    }
}
// Plugin settings
class MyPluginSettingTab extends obsidian.PluginSettingTab {
    constructor(app, plugin) {
        super(app, plugin);
        this.plugin = plugin;
    }
    display() {
        const { containerEl } = this;
        containerEl.empty();
        this.plugin.loadData();
        containerEl.createEl('h2', { text: 'Sidebar Expand On Hover' });
        containerEl.createEl('h4', { text: 'Enable Individual Sidebar' });
        const leftSideEnabled = new obsidian.Setting(containerEl);
        leftSideEnabled.setName('Left Sidebar');
        leftSideEnabled.setDesc('Toggle to enable/disable left sidebar expand on hover');
        leftSideEnabled.addToggle((t) => {
            t.setValue(this.plugin.settings.leftSideEnabled);
            t.onChange((v) => __awaiter(this, void 0, void 0, function* () {
                if (v) {
                    this.plugin.settings.leftSideEnabled = true;
                    this.plugin.saveSettings();
                    this.plugin.addStyle();
                }
                else {
                    this.plugin.settings.leftSideEnabled = false;
                    this.plugin.saveSettings();
                    this.plugin.removeStyle();
                }
                this.plugin.setEvents();
            }));
        });
        const rightSideEnabled = new obsidian.Setting(containerEl);
        rightSideEnabled.setName('Right Sidebar');
        rightSideEnabled.setDesc('Toggle to enable/disable right sidebar expand on hover');
        rightSideEnabled.addToggle((t) => {
            t.setValue(this.plugin.settings.rightSideEnabled);
            t.onChange((v) => __awaiter(this, void 0, void 0, function* () {
                if (v) {
                    this.plugin.settings.rightSideEnabled = true;
                    this.plugin.saveSettings();
                    this.plugin.addStyle();
                }
                else {
                    this.plugin.settings.rightSideEnabled = false;
                    this.plugin.saveSettings();
                    this.plugin.removeStyle();
                }
                this.plugin.setEvents();
            }));
        });
        containerEl.createEl('h4', { text: 'Sidebar Animation' });
        const leftSidebarAnimation = new obsidian.Setting(containerEl);
        leftSidebarAnimation.setName('Left Sidebar');
        leftSidebarAnimation.setDesc('Toggle to enable/disable left sidebar animation');
        leftSidebarAnimation.addToggle((t) => {
            t.setValue(this.plugin.settings.leftSidebarAnimation);
            t.onChange((v) => __awaiter(this, void 0, void 0, function* () {
                if (v) {
                    this.plugin.settings.leftSidebarAnimation = true;
                    this.plugin.saveSettings();
                    this.plugin.addStyle();
                }
                else {
                    this.plugin.settings.leftSidebarAnimation = false;
                    this.plugin.saveSettings();
                    this.plugin.removeStyle();
                }
            }));
        });
        const rightSidebarAnimation = new obsidian.Setting(containerEl);
        rightSidebarAnimation.setName('Right Sidebar');
        rightSidebarAnimation.setDesc('Toggle to enable/disable right sidebar animation');
        rightSidebarAnimation.addToggle((t) => {
            t.setValue(this.plugin.settings.rightSidebarAnimation);
            t.onChange((v) => __awaiter(this, void 0, void 0, function* () {
                if (v) {
                    this.plugin.settings.rightSidebarAnimation = true;
                    this.plugin.saveSettings();
                    this.plugin.addStyle();
                }
                else {
                    this.plugin.settings.rightSidebarAnimation = false;
                    this.plugin.saveSettings();
                    this.plugin.removeStyle();
                }
            }));
        });
        containerEl.createEl('h4', { text: 'Sidebar Expand Width' });
        const leftSidebarWidth = new obsidian.Setting(containerEl);
        leftSidebarWidth.setName('Left Sidebar');
        leftSidebarWidth.setDesc('Set the width of left sidebar in pixel unit');
        leftSidebarWidth.addText((t) => t
            .setPlaceholder('Default: 252')
            .setValue(String(this.plugin.settings.leftSidebarWidth))
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.leftSidebarWidth = Number(value);
            this.plugin.saveSettings();
        })));
        const rightSidebarWidth = new obsidian.Setting(containerEl);
        rightSidebarWidth.setName('Right Sidebar');
        rightSidebarWidth.setDesc('Set the width of right sidebar in pixel unit');
        rightSidebarWidth.addText((t) => t
            .setPlaceholder('Default: 252')
            .setValue(String(this.plugin.settings.rightSidebarWidth))
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.rightSidebarWidth = Number(value);
            this.plugin.saveSettings();
        })));
    }
}

module.exports = MyPlugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
