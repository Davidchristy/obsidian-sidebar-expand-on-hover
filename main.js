/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

const DEFAULT_SETTINGS = {
    leftSideEnabled: true,
    rightSideEnabled: true,
    leftSidebarAnimation: false,
    rightSidebarAnimation: false,
    leftSidebarWidth: 252,
    rightSidebarWidth: 252,
};
class MyPlugin extends obsidian.Plugin {
    constructor() {
        super(...arguments);
        // Initializes the variables to store DOM HTML elements
        this.initialize = () => {
            this.leftRibbon = this.app.workspace.leftRibbon.containerEl;
            this.rightRibbon = this.app.workspace
                .rightRibbon.containerEl;
            this.leftSidebar = this.app.workspace
                .leftSplit.containerEl;
            this.rightSidebar = this.app.workspace
                .rightSplit.containerEl;
        };
        // Adds event listeners to the HTML elements
        this.setEvents = () => {
            this.registerDomEvent(this.app.workspace.rootSplit.containerEl, 'mouseenter', () => {
                this.collapseSidebar();
            });
            this.registerDomEvent(this.leftRibbon, 'mouseenter', () => {
                this.expandSidebar(this.leftSidebar);
            });
            this.registerDomEvent(this.rightRibbon, 'mouseenter', () => {
                this.expandSidebar(this.rightSidebar);
            });
            // To avoid 'glitch'
            this.registerDomEvent(this.app.workspace.leftSplit.resizeHandleEl, 'mouseenter', () => {
                this.expandSidebar(this.leftSidebar);
            });
        };
        // Changes sidebar style width and display to expand it
        this.expandSidebar = (sidebar) => {
            try {
                if (sidebar == this.leftSidebar && this.settings.leftSideEnabled) {
                    this.app.workspace.leftSplit.setSize(this.settings.leftSidebarWidth);
                    this.app.workspace.leftSplit.expand();
                }
                if (sidebar == this.rightSidebar && this.settings.rightSideEnabled) {
                    this.app.workspace.rightSplit.setSize(this.settings.rightSidebarWidth);
                    this.app.workspace.rightSplit.expand();
                }
            }
            catch (e) {
                console.log('Failed to read property');
            }
        };
        // Changes sidebar style width to collapse it
        this.collapseSidebar = () => {
            if (this.settings.leftSideEnabled) {
                this.app.workspace.leftSplit.collapse();
            }
            if (this.settings.rightSideEnabled) {
                this.app.workspace.rightSplit.collapse();
            }
        };
        // CSS for adding transition animation
        this.addStyle = () => {
            if (this.settings.leftSidebarAnimation) {
                this.leftSidebar.classList.add('sidebar');
                this.leftSidebar.classList.toggle('.sidebar.active');
            }
            if (this.settings.rightSidebarAnimation) {
                this.rightSidebar.classList.add('sidebar');
                this.rightSidebar.classList.toggle('.sidebar.active');
            }
        };
        // Removes transition animation
        this.removeStyle = () => {
            if (!this.settings.leftSidebarAnimation) {
                this.leftSidebar.classList.remove('sidebar');
            }
            if (!this.settings.rightSidebarAnimation) {
                this.rightSidebar.classList.remove('sidebar');
            }
        };
    }
    onload() {
        return __awaiter(this, void 0, void 0, function* () {
            // Initialize and set events when layout is fully ready
            this.app.workspace.onLayoutReady(() => {
                this.initialize();
                this.setEvents();
                this.addSettingTab(new MyPluginSettingTab(this.app, this));
                this.loadSettings().then(() => {
                    this.addStyle();
                });
            });
        });
    }
    onunload() {
        this.saveSettings();
    }
    loadSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            this.settings = Object.assign(DEFAULT_SETTINGS, yield this.loadData());
        });
    }
    saveSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.saveData(this.settings);
        });
    }
}
// Plugin settings
class MyPluginSettingTab extends obsidian.PluginSettingTab {
    constructor(app, plugin) {
        super(app, plugin);
        this.plugin = plugin;
    }
    display() {
        const { containerEl } = this;
        containerEl.empty();
        this.plugin.loadData();
        containerEl.createEl('h2', { text: 'Sidebar Expand On Hover' });
        containerEl.createEl('h4', { text: 'Enable Individual Sidebar' });
        const leftSideEnabled = new obsidian.Setting(containerEl);
        leftSideEnabled.setName('Left Sidebar');
        leftSideEnabled.setDesc('Toggle to enable/disable left sidebar expand on hover');
        leftSideEnabled.addToggle((t) => {
            t.setValue(this.plugin.settings.leftSideEnabled);
            t.onChange((v) => __awaiter(this, void 0, void 0, function* () {
                if (v) {
                    this.plugin.settings.leftSideEnabled = true;
                    this.plugin.saveSettings();
                    this.plugin.addStyle();
                }
                else {
                    this.plugin.settings.leftSideEnabled = false;
                    this.plugin.saveSettings();
                    this.plugin.removeStyle();
                }
                this.plugin.setEvents();
            }));
        });
        const rightSideEnabled = new obsidian.Setting(containerEl);
        rightSideEnabled.setName('Right Sidebar');
        rightSideEnabled.setDesc('Toggle to enable/disable right sidebar expand on hover');
        rightSideEnabled.addToggle((t) => {
            t.setValue(this.plugin.settings.rightSideEnabled);
            t.onChange((v) => __awaiter(this, void 0, void 0, function* () {
                if (v) {
                    this.plugin.settings.rightSideEnabled = true;
                    this.plugin.saveSettings();
                    this.plugin.addStyle();
                }
                else {
                    this.plugin.settings.rightSideEnabled = false;
                    this.plugin.saveSettings();
                    this.plugin.removeStyle();
                }
                this.plugin.setEvents();
            }));
        });
        containerEl.createEl('h4', { text: 'Sidebar Animation' });
        const leftSidebarAnimation = new obsidian.Setting(containerEl);
        leftSidebarAnimation.setName('Left Sidebar');
        leftSidebarAnimation.setDesc('Toggle to enable/disable left sidebar animation');
        leftSidebarAnimation.addToggle((t) => {
            t.setValue(this.plugin.settings.leftSidebarAnimation);
            t.onChange((v) => __awaiter(this, void 0, void 0, function* () {
                if (v) {
                    this.plugin.settings.leftSidebarAnimation = true;
                    this.plugin.saveSettings();
                    this.plugin.addStyle();
                }
                else {
                    this.plugin.settings.leftSidebarAnimation = false;
                    this.plugin.saveSettings();
                    this.plugin.removeStyle();
                }
            }));
        });
        const rightSidebarAnimation = new obsidian.Setting(containerEl);
        rightSidebarAnimation.setName('Right Sidebar');
        rightSidebarAnimation.setDesc('Toggle to enable/disable right sidebar animation');
        rightSidebarAnimation.addToggle((t) => {
            t.setValue(this.plugin.settings.rightSidebarAnimation);
            t.onChange((v) => __awaiter(this, void 0, void 0, function* () {
                if (v) {
                    this.plugin.settings.rightSidebarAnimation = true;
                    this.plugin.saveSettings();
                    this.plugin.addStyle();
                }
                else {
                    this.plugin.settings.rightSidebarAnimation = false;
                    this.plugin.saveSettings();
                    this.plugin.removeStyle();
                }
            }));
        });
        containerEl.createEl('h4', { text: 'Sidebar Expand Width' });
        const leftSidebarWidth = new obsidian.Setting(containerEl);
        leftSidebarWidth.setName('Left Sidebar');
        leftSidebarWidth.setDesc('Set the width of left sidebar in pixel unit');
        leftSidebarWidth.addText((t) => t
            .setPlaceholder('Default: 252')
            .setValue(String(this.plugin.settings.leftSidebarWidth))
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.leftSidebarWidth = Number(value);
            this.plugin.saveSettings();
        })));
        const rightSidebarWidth = new obsidian.Setting(containerEl);
        rightSidebarWidth.setName('Right Sidebar');
        rightSidebarWidth.setDesc('Set the width of right sidebar in pixel unit');
        rightSidebarWidth.addText((t) => t
            .setPlaceholder('Default: 252')
            .setValue(String(this.plugin.settings.rightSidebarWidth))
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.rightSidebarWidth = Number(value);
            this.plugin.saveSettings();
        })));
    }
}

module.exports = MyPlugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsibm9kZV9tb2R1bGVzL3RzbGliL3RzbGliLmVzNi5qcyIsInNyYy9tYWluLnRzIl0sInNvdXJjZXNDb250ZW50IjpudWxsLCJuYW1lcyI6WyJQbHVnaW4iLCJQbHVnaW5TZXR0aW5nVGFiIiwiU2V0dGluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXVEQTtBQUNPLFNBQVMsU0FBUyxDQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRTtBQUM3RCxJQUFJLFNBQVMsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLE9BQU8sS0FBSyxZQUFZLENBQUMsR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUMsVUFBVSxPQUFPLEVBQUUsRUFBRSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRTtBQUNoSCxJQUFJLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLE9BQU8sQ0FBQyxFQUFFLFVBQVUsT0FBTyxFQUFFLE1BQU0sRUFBRTtBQUMvRCxRQUFRLFNBQVMsU0FBUyxDQUFDLEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7QUFDbkcsUUFBUSxTQUFTLFFBQVEsQ0FBQyxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7QUFDdEcsUUFB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
